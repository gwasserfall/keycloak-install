server {
    listen 80;

    server_name _;
    return 301 https://$host$request_uri;
}

server {

    include       /etc/nginx/mime.types;

    listen 443 ssl;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_certificate  /etc/ssl/certs/ssl-cert-snakeoil.pem;
    ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;

    proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address 
    proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
    proxy_set_header Host $host; # to forward the original host requested by the client

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Content-Security-Policy "default-src 'self'; frame-ancestors 'self'; script-src 'self' 'unsafe-inline'; script-src-elem 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src https://192.168.0.30;";   
    add_header X-Content-Type-Options nosniff;    # cannot apply now because of open keycloak issue https://issues.redhat.com/browse/KEYCLOAK-17076
    add_header X-XSS-Protection: "1; mode=block";

    location /auth {
        proxy_pass http://localhost:8080;
    }
}